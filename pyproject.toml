[project]
name = "process_analyst_copilot"
version = "0.4.0" # This is not used - version is controlled by poetry_dynamic_versioning
description = "Hellow World deployment test"
authors = [
    { name = "Stephan Borg", email = "wolffborg1@gmail.com" }
]
readme = "README.md"
packages = [{include = "process_analyst_copilot"}]
include = [
    "config/*",
    "docs/*",
    "CHANGELOG.md",
    "poetry.lock",
]
# Optional: If you want to include extra files in sdist/wheel
# [project.urls], [project.scripts], etc. can be added as needed
dynamic = ["version"]

requires-python = ">=3.11,<=3.13"
dependencies = [
    "pytest>=8.3.4,<9.0.0",
    "pytest-asyncio (>=1.0.0,<2.0.0)",
    "pytest-cov>=6.0.0,<7.0.0",
    "pydantic (>=2.11.7,<3.0.0)",
    "crewai[google] (>=0.150.0,<0.151.0)",
    "crewai-tools (>=0.58.0,<0.59.0)",
    "spacy (>=3.8.7,<4.0.0)",
    "google-generativeai (>=0.8.5,<0.9.0)",
    "ollama (>=0.5.1,<0.6.0)",
    "langchain-ollama (>=0.3.6,<0.4.0)",
]


[project.optional-dependencies]
dev = [
    "commitizen>=4.1.0,<5.0.0",
    "poetry-dynamic-versioning>=1.6.0,<2.0.0",
    "black>=25.1.0,<26.0.0",
    "pyright>=1.1.0,<2.0.0",
    "types-requests>=2.32.0.20241016,<3.0.0",
    "types-pyyaml>=6.0.12.20241230,<7.0.0",
    "mypy>=1.13.0,<2.0.0",
    "flake8>=7.1.1,<8.0.0",
    "flake8-bugbear>=24.10.31,<25.0.0",
    "flake8-annotations>=3.1.1,<4.0.0",
    "flake8-pyproject>=1.2.3,<2.0.0",
    "flake8-mypy>=17.8.0,<18.0.0",
    "behave>=1.2.6,<2.0.0",
    "pdoc>=15.0.1,<16.0.0",
    "reportlab (>=4.4.3,<5.0.0)",
]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = false

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.mypy]
strict = true
packages = ["src", "test"]
show_error_codes = true
ignore_missing_imports = true
allow_redefinition = false
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
plugins = [
  "pydantic.mypy"
]

[tool.flake8]
max-line-length = 120
select = "C,E,F,W,B,B950"
extend-ignore = "E203,E501,E704,F811,W503"
exclude = ".venv,.git,docs,build,dist,*.egg-info,.pytest_cache,.vscode,bamboo-specs,jenkins-specs"
output-file = "build/flake8/flake8.txt"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["./tests"]
asyncio_default_fixture_loop_scope = "function"
addopts = "--cov=src --junitxml='build/unit-tests.xml' --cov-report=xml:'build/coverage.xml' --cov-report=html:'build/coverage-reports' --cov-report=term-missing --cov-branch"

[tool.poetry]
version = "0.0.0"
